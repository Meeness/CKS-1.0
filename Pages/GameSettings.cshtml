@page
@model GameSettingsModel
@{
    ViewData["Title"] = "Game Settings";
}
<section class="main">
<form id="testmode" method="post">

</form>
<div class="grid-container">
  <div class="Page-name"><p id="header">GAME SETTINGS</p></div>
  @if(Model.CK.ActiveGame.Gamemode.Id==1){
    <div class="Team-x"> <!-- Gamemode 1 -->
      <label for="teamx"></label>
      <form method="post"> <!-- Team 1 name -->
        <input type="hidden" value="0" name="teamindex"/>
        <input type="text" id="teamx" name="teamname" value="@Model.CK.ActiveGame.Gamemode.Teams[0].Name" onfocusout="this.form.submit()">
      </form>
    </div>
    <div class="Team-y">
      <label for="teamy"></label>
      <form method="post"> <!-- Team 2 name -->
        <input type="hidden" value="1" name="teamindex"/>
        <input type="text" id="teamy" name="teamname" value="@Model.CK.ActiveGame.Gamemode.Teams[1].Name" onfocusout="this.form.submit()">
      </form>
    </div>
    <div class="Teamx-players">
      <ul class="playerslist"> <!-- Team 1 -->
        @foreach (var player in Model.CK.ActiveGame.Gamemode.Teams[0].Players)
        {
          <li>
            <span class="playerText">@System.Text.Encoding.UTF8.GetString(player.Client.CKInv.Items[0].Value)</span>
            <form class="formselect" method="post">
              <select class="teamselect" name="teamselect" onchange="this.form.submit()">
                <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) 0">Available Players</option>
                @foreach (var team in Model.CK.ActiveGame.Gamemode.Teams){
                  if(player.TeamId==team.Id){
                    <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id" selected>@team.Name</option>
                  }else{
                    <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id">@team.Name</option>
                  }
                }
              </select>
            </form>
          </li>
        }
      </ul>
    </div>
    <div class="Teamy-players">
      <ul class="playerslist"> <!-- Team 2 -->
        @foreach (var player in Model.CK.ActiveGame.Gamemode.Teams[1].Players)
        {
          <li>
            
            <span class="playerText">@System.Text.Encoding.UTF8.GetString(player.Client.CKInv.Items[0].Value)</span>
            <form class="formselect" method="post">
              <select class="teamselect" name="teamselect" onchange="this.form.submit()">
                <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) 0">Available Players</option>
                @foreach (var team in Model.CK.ActiveGame.Gamemode.Teams){
                  if(player.TeamId==team.Id){
                    <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id" selected>@team.Name</option>
                  }else{
                    <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id">@team.Name</option>
                  }
                }
              </select>
            </form>
          </li>
        }
      </ul>
    </div>
  }
  @if(Model.CK.ActiveGame.Gamemode.Id==2) 
  {
    <link rel="stylesheet" href="~/css/deathmatch.css" />
    <div class="Team-x">  <!-- Gamemode 2 -->
      <label for="teamx"></label>
      <form method="post"> <!-- Team 1 name -->
        <input type="hidden" value="0" name="teamindex"/>
        <input type="text" id="teamx" name="teamname" value="@Model.CK.ActiveGame.Gamemode.Teams[0].Name" onfocusout="this.form.submit()">
      </form>
    </div>
    <div class="Teamx-players"> <!-- Team 1 -->
      <ul class="playerslist">
        @foreach (var player in Model.CK.ActiveGame.Gamemode.Teams[0].Players)
        {
          <li> 
            <span class="playerText">@System.Text.Encoding.UTF8.GetString(player.Client.CKInv.Items[0].Value)</span>
            <form class="formselect" method="post">
              <select class="teamselect" name="teamselect" onchange="this.form.submit()">
                <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) 0">Available Players</option>
                @foreach (var team in Model.CK.ActiveGame.Gamemode.Teams){
                  if(player.TeamId==team.Id){
                    <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id" selected>@team.Name</option>
                  }else{
                    <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id">@team.Name</option>
                  }
                }
              </select>
            </form>
          </li>
        }
      </ul>
    </div>
  }

  
  <div class="Script-name">
<label for="scripts" id="script">Game script</label>
<br>
<form method="post"> <!-- Gamemode Select -->
  <select id="scripts" name="modeselect" onchange="this.form.submit()">
    @foreach(var gamemode in Model.CK.ActiveGame.GamemodeList){
      if(gamemode.Id==Model.CK.ActiveGame.Gamemode.Id){
        <option value="@gamemode.Id" selected>@gamemode.Name</option>
      }
      else{
        <option value="@gamemode.Id">@gamemode.Name</option>
      }
      
    }
  </select>
</form>
  </div>
  <div class="players"><label id="script">Available players</label></div>
  <div class="AVPLAYERS"> <!-- Available players -->
    <ul class="playerslist">
      @foreach (var player in Model.CK.ActiveGame.AvailPlayers)
      {
        <li>
          
          <span class="playerText">@System.Text.Encoding.UTF8.GetString(player.Client.CKInv.Items[0].Value)</span>
          <form class="formselect" method="post">
            <select class="teamselect" name="teamselect" onchange="this.form.submit()">
            
              <option value="">Available Players</option>
              @foreach (var team in Model.CK.ActiveGame.Gamemode.Teams){
                <option value="@BitConverter.ToInt16(Model.CK.ConvertTo4Byte(player.Client.LWInv.Items.Find(x=>x.Id==0x14).Value), 0) @team.Id">@team.Name</option>
              }
            </select>
          </form>
        </li>
      }
    </ul>
  </div>
  <div class="Timer">
    <div class="container">
    <!-- form -->
    <form class="form" method="post">
      <!-- countdown time input field -->
      @if(Model.CK.ActiveGame.State==GameState.Running){
        <input id="timeremaining" class="timeremaining" name="timeremaining" type="hidden" value="@Model.CK.ActiveGame.GetRemainingGameTicks()"/>
      }else if(Model.CK.ActiveGame.State==GameState.Over){
        <input id="timeremaining" class="stoppedtimeremaining" name="timeremaining" type="hidden" value="@Model.CK.ActiveGame.RemainingGameTime"/>
      }
      <div class="timewrap">
        <label for="durationwrapper" class="minlabel">Duration:</label>
        <div id="durationwrapper" class="minwrapper">
          @if(Model.CK.ActiveGame.State==GameState.Running||Model.CK.ActiveGame.State==GameState.Over){
            <input name="gameduration" type="number" min="1" value="@Model.CK.ActiveGame.GameDuration" class="time-input" placeholder="Enter Game duration" onfocusout="this.form.submit()" disabled>
          }else{
            <input name="gameduration" type="number" min="1" value="@Model.CK.ActiveGame.GameDuration" class="time-input" placeholder="Enter Game duration" onfocusout="this.form.submit()">
          }
          <b class="minutes">Min</b>
        </div>
      </div>
      <div class="timewrap">
        <label for="delaywrapper" class="minlabel">Delay:</label>
        <div id="delaywrapper" class="minwrapper"> 
          @if(Model.CK.ActiveGame.State==GameState.Running||Model.CK.ActiveGame.State==GameState.Over){
            <input name="gamedelay" type="number" min="1" value="@Model.CK.ActiveGame.GameDelay" class="time-input" placeholder="Enter Game delay" onfocusout="this.form.submit()" disabled>
          }else{
            <input name="gamedelay" type="number" min="1" value="@Model.CK.ActiveGame.GameDelay" class="time-input" placeholder="Enter Game delay" onfocusout="this.form.submit()">
          }
          <b class="minutes">Sec</b>
        </div>
      </div>
      
      
      <!-- submit button or set button -->

    
      <!-- countdown text -->
      <p class="countdown">00 : 00 : 00</p>

      <!-- buttons -->
      <div class="buttons">
        @if(Model.CK.ActiveGame.State==GameState.Over){
          <button id="readybtn" name="gameready" class="startstop" type="submit" >New Game</button>
        }else if(Model.CK.ActiveGame.State==GameState.Ready){
          <button id="startbtn" name="gamestart" class="startstop" type="submit" >Start</button>
        }else{
          <button id="stopbtn" name="gamestop" class="startstop" type="submit" >Stop</button>
        }
      </div>
    </form>
  </div>
  </div>
</div>
</section>
<script src="~/js/timer.js" asp-append-version="true"></script>